FROM stackbrew/debian:jessie
ENV ARCH amd64
ENV DIST wheezy
ENV MIRROR http://ftp.nl.debian.org
RUN 	apt-get -q update && \
	apt-get -qy install \
#		isc-dhcp-server \
		dnsmasq \
#		bind9 \ 
#		bind9utils \
		wget \ 
		iptables && \
	wget --no-check-certificate https://raw.github.com/jpetazzo/pipework/master/pipework && \
	chmod +x pipework

VOLUME /home/ehud/docker/isc-dhcp/etc/bind/ /etc/bind/
VOLUME /home/ehud/docker/isc-dhcp/etc/dhcp/ /etc/dhcp/
VOLUME etc/dhcp/ddns-keys/ /etc/dhcp/ddns-keys/
RUN mkdir /tftp
WORKDIR /tftp
#RUN wget $MIRROR/debian/dists/$DIST/main/installer-$ARCH/current/images/netboot/debian-installer/$ARCH/linux
#RUN wget $MIRROR/debian/dists/$DIST/main/installer-$ARCH/current/images/netboot/debian-installer/$ARCH/initrd.gz
#RUN wget $MIRROR/debian/dists/$DIST/main/installer-$ARCH/current/images/netboot/debian-installer/$ARCH/pxelinux.0
#RUN mkdir pxelinux.cfg
#RUN printf "DEFAULT linux\nKERNEL linux\nAPPEND initrd=initrd.gz\n" >pxelinux.cfg/default
CMD	\
   	echo Setting up iptables... &&\
   	iptables -t nat -A POSTROUTING -j MASQUERADE &&\
   	echo Waiting for pipework to give us the eth1 interface... &&\
   	/pipework --wait &&\
   	echo Waiting for pipework to give us the eth2 interface... &&\
   	/pipework --wait &&\
   	echo Starting DHCP+TFTP server...
	
CMD    dnsmasq --interface=eth0 \
    	    --dhcp-range=10.20.30.20,10.20.30.99,255.255.255.0,1h \
	    --dhcp-boot=pxelinux.0,pxeserver,10.20.30.1 \
	    --pxe-service=x86PC,"Install Linux",pxelinux \
	    --enable-tftp --tftp-root=/tftp/ --no-daemon
# Let's be honest: I don't know if the --pxe-service option is necessary.
# The iPXE loader in QEMU boots without it.  But I know how some PXE ROMs
# can be picky, so I decided to leave it, since it shouldn't hurt.
